openapi: 3.0.1
info:
  title: WEB3GPT Contract Deployer and Interactor API
  description: This API allows users to deploy Solidity smart contracts to Ethereum Virtual Machine (EVM) compatible blockchains and interact (read/write) with EVM smart contracts.
  version: "1.0.0"
servers:
  - url: https://w3gpt.ai
paths:
  /api/deploy-contract:
    post:
      operationId: deploySmartContract
      summary: Deploy a Solidity smart contract to specified EVM-compatible blockchains.
      description: This endpoint deploys a Solidity smart contract (version 0.8.20 or greater) to one or more EVM-compatible blockchains. It requires the contract's name, source code, target blockchains, and constructor arguments (if any).
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeployContractRequest"
      responses:
        "200":
          description: The contract was successfully deployed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Contract"
  /api/web3:
    get:
      operationId: readFromContract
      summary: Read from a deployed smart contract on specified EVM-compatible blockchains.
      description: This endpoint performs read operations on a deployed Solidity smart contract on one or more EVM-compatible blockchains. It requires the chain name, an array of requests each consisting of the contract's address, function name, and function arguments (if any).
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReadWeb3Request"
      responses:
        "200":
          description: The read operation(s) were performed successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Web3Response"
    post:
      operationId: writeToContract
      summary: Write to a deployed smart contract on specified EVM-compatible blockchains.
      description: This endpoint performs write operations on a deployed Solidity smart contract on one or more EVM-compatible blockchains. It requires the chain name, an array of requests each consisting of the contract's address, function name, and function arguments (if any).
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WriteWeb3Request"
      responses:
        "200":
          description: The write operation(s) were performed successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Web3Response"
components:
  schemas:
    Contract:
      type: object
      required:
        - name
        - address
        - chain
        - sourceCode
      properties:
        name:
          type: string
          description: The name of the smart contract. This should only contain letters and should not have spaces or special characters.
        address:
          type: string
          description: The blockchain address where the smart contract is deployed.
        chain:
          type: string
          description: The name of the blockchain network where the smart contract is deployed.
        sourceCode:
          type: string
          description: The Solidity source code of the smart contract. The Solidity version must be 0.8.20 or greater.
        constructorArgs:
          type: array
          items:
            oneOf:
              - type: string
              - type: array
                items:
                  type: string
          description: An array of arguments that were passed to the smart contract's constructor during deployment. Each argument can be a string or an array of strings.
    DeployContractRequest:
      type: object
      required:
        - name
        - chains
        - sourceCode
        - constructorArgs
      properties:
        name:
          type: string
          description: The name of the smart contract to be deployed. This should only contain letters and should not have spaces or special characters.
        chains:
          type: array
          items:
            type: string
          description: An array of blockchain network names to which the smart contract will be deployed. These names should not contain special characters.
        sourceCode:
          type: string
          description: The Solidity source code of the smart contract to be deployed. The Solidity version must be 0.8.20 or greater.
        constructorArgs:
          type: array
          items:
            oneOf:
              - type: string
              - type: array
                items:
                  type: string
          description: An array of arguments to be passed to the smart contract's constructor during deployment. Each argument can be a string or an array of strings. If there are no constructor arguments, an empty array [] must be provided.
    ReadWeb3Request:
      type: object
      required:
        - chain
        - requests
      properties:
        chain:
          type: string
          description: The name of the blockchain network where the contract operations will be performed.
        requests:
          type: array
          items:
            type: object
            required:
              - address
              - functionName
              - functionArgs
            properties:
              address:
                type: string
                description: The blockchain address where the smart contract is deployed.
              functionName:
                type: string
                description: The name of the contract function to be called.
              functionArgs:
                type: array
                items:
                  oneOf:
                    - type: string
                    - type: array
                      items:
                        type: string
                description: An array of arguments to be passed to the contract's function. Each argument can be a string or an array of strings. If there are no function arguments, an empty array [] must be provided.
    WriteWeb3Request:
      type: object
      required:
        - chain
        - requests
      properties:
        chain:
          type: string
          description: The name of the blockchain network where the contract operations will be performed.
        requests:
          type: array
          items:
            type: object
            required:
              - address
              - functionName
              - functionArgs
            properties:
              address:
                type: string
                description: The blockchain address where the smart contract is deployed.
              functionName:
                type: string
                description: The name of the contract function to be called.
              functionArgs:
                type: array
                items:
                  oneOf:
                    - type: string
                    - type: array
                      items:
                        type: string
                description: An array of arguments to be passed to the contract's function. Each argument can be a string or an array of strings. If there are no function arguments, an empty array [] must be provided.
    Web3Response:
      type: array
      items:
        type: object
        required:
          - status
        properties:
          status:
            type: string
            description: Status of the operation ('fulfilled' for success, 'rejected' for failure)
          value:
            type: object
            description: The returned data from the operation. Null in case of failure.
          reason:
            type: string
            description: The error message in case the operation was rejected.
